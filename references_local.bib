@misc{MemorySafety,
	title = {Memory safety},
	url = {https://www.chromium.org/Home/chromium-security/memory-safety/},
	urldate = {2023-10-07},
	author = {{Chromium Authors}},
}

@misc{beckManifestoAgileSoftware2001,
	title = {Manifesto for {Agile} {Software} {Development}},
	url = {http://www.agilemanifesto.org/},
	author = {Beck, Kent and Beedle, Mike and van Bennekum, Arie and Cockburn, Alistair and Cunningham, Ward and Fowler, Martin and Grenning, James and Highsmith, Jim and Hunt, Andrew and Jeffries, Ron and Kern, Jon and Marick, Brian and Martin, Robert C. and Mellor, Steve and Schwaber, Ken and Sutherland, Jeff and Thomas, Dave},
	year = {2001},
	note = {Publication Title: Manifesto for Agile Software Development},
	keywords = {imported},
}

@misc{WhatHPCIntroduction,
	title = {What is {HPC}? {Introduction} to high-performance computing {\textbar} {IBM}},
	shorttitle = {What is {HPC}?},
	url = {https://www.ibm.com/topics/hpc},
	abstract = {High-performance computing (HPC) technology harnesses the power of supercomputers or computer clusters to solve complex problems requiring massive computation.},
	language = {en-us},
	urldate = {2023-10-10},
	author = {{IBM Corporation}},
}

@misc{osti_1231191,
	title = {{miniMD} v1.0},
	url = {https://www.osti.gov//servlets/purl/1231191},
	abstract = {Simple parallel MD code that serves as a microapplication in the Mantevo suite. Study of computer system design and implementation, benchmarking of new and existing computer systems.},
	author = {Crozier, Paul and Plimpton, Steven},
	month = jun,
	year = {2009},
}

@article{dongarra2015hpcg,
	title = {Hpcg benchmark: a new metric for ranking high performance computing systems},
	volume = {42},
	journal = {Knoxville, Tennessee},
	author = {Dongarra, Jack and Heroux, Michael A and Luszczek, Piotr},
	year = {2015},
}

@misc{endlerMreIdiomaticrust2023,
	title = {Idiomatic Rust},
	url = {https://github.com/mre/idiomatic-rust},
	abstract = {A peer-reviewed collection of articles/talks/repos which teach concise, idiomatic Rust.},
	urldate = {2023-10-08},
	author = {{Endler, Matthias}},
	month = oct,
	year = {2023},
	keywords = {ergonomics, idiomatic, idiomatic-rust, rust},
}

@techreport{heroux2013mantevo,
	title = {Mantevo suite 1.0.},
	institution = {Sandia National Lab.(SNL-NM), Albuquerque, NM (United States)},
	author = {Heroux, Michael Allen and Barrett, Richard Frederick and Willenbring, James Michael and Hammond, Simon David and Richards, David and Mohd-Yusof, Jamal and Herdman, Andrew},
	year = {2013},
}

@article{hestenesMethodsConjugateGradients1952,
	title = {Methods of {Conjugate} {Gradients} for {Solving} {Linear} {Systems}},
	volume = {49},
	doi = {10.6028/jres.049.044},
	number = {6},
	journal = {Journal of Research of the National Bureau of Standards},
	author = {Hestenes, Magnus R and Steifel, Eduard},
	month = dec,
	year = {1952},
	pages = {409 -- 436},
}

@misc{ImprovingInteroperabilityRust,
	title = {Improving {Interoperability} {Between} {Rust} and {C}++},
	url = {https://security.googleblog.com/2024/02/improving-interoperability-between-rust-and-c.html},
	abstract = {Posted by Lars Bergstrom – Director, Android Platform Tools \& Libraries and Chair of the Rust Foundation Board    Back in 2021, we announced...},
	language = {en},
	urldate = {2024-03-04},
	author = {{Google Online Security Blog}},
}

@misc{MantevoHPCCG2023,
	title = {HPCCG},
	copyright = {BSD-3-Clause},
	url = {https://github.com/Mantevo/HPCCG},
	abstract = {High Performance Computing Conjugate Gradients:  The original Mantevo miniapp},
	urldate = {2024-03-05},
    author = {Heroux, Michael Allen},
	publisher = {The Mantevo Performance Co-design Project},
	month = oct,
	year = {2023},
	note = {original-date: 2017-07-02T13:46:43Z},
}

@misc{PressReleaseFuture2024,
	title = {Press {Release}: {Future} {Software} {Should} {Be} {Memory} {Safe} {\textbar} {ONCD}},
	url = {https://www.whitehouse.gov/oncd/briefing-room/2024/02/26/press-release-technical-report/},
	abstract = {Leaders in Industry Support White House Call to Address Root Cause of Many of the Worst Cyber Attacks Read the full report here WASHINGTON – Today, the White House Office of the National Cyber Director (ONCD) released a report calling on the technical community to proactively reduce the attack surface in cyberspace. ONCD makes the…},
	language = {en-US},
	urldate = {2024-03-04},
	author = {The White House},
	month = feb,
	year = {2024},
}

@misc{RustProgrammingLanguage,
	title = {Rust {Programming} {Language}},
	url = {https://www.rust-lang.org/},
	urldate = {2023-10-06},
	author = {{Rust Project}},
}

@misc{StackOverflowDeveloper,
	title = {Stack {Overflow} {Developer} {Survey} 2023},
	url = {https://survey.stackoverflow.co/2023/},
	abstract = {In May 2023 over 90,000 developers responded to our annual survey about how they learn and level up, which tools they're using, and which ones they want.},
	language = {en},
	urldate = {2023-10-06},
	journal = {Stack Overflow},
	author = {Stack Exchange, Inc.},
}

@inproceedings{stepanovMemorySanitizerFastDetector2015,
	title = {{MemorySanitizer}: {Fast} detector of uninitialized memory use in {C}++},
	shorttitle = {{MemorySanitizer}},
	url = {https://ieeexplore.ieee.org/abstract/document/7054186},
	doi = {10.1109/CGO.2015.7054186},
	abstract = {This paper presents MemorySanitizer, a dynamic tool that detects uses of uninitialized memory in C and C++. The tool is based on compile time instrumentation and relies on bit-precise shadow memory at run-time. Shadow propagation technique is used to avoid false positive reports on copying of uninitialized memory. MemorySanitizer finds bugs at a modest cost of 2.5× in execution time and 2× in memory usage; the tool has an optional origin tracking mode that provides better reports with moderate extra overhead. The reports with origins are more detailed compared to reports from other similar tools; such reports contain names of local variables and the entire history of the uninitialized memory including intermediate stores. In this paper we share our experience in deploying the tool at a large scale and demonstrate the benefits of compile-time instrumentation over dynamic binary instrumentation.},
	urldate = {2023-10-10},
	booktitle = {2015 {IEEE}/{ACM} {International} {Symposium} on {Code} {Generation} and {Optimization} ({CGO})},
	author = {Stepanov, Evgeniy and Serebryany, Konstantin},
	month = feb,
	year = {2015},
	pages = {46--55},
}

@book{beckTestDrivenDevelopment2022,
	title = {Test {Driven} {Development}: {By} {Example}},
	isbn = {978-0-13-758523-6},
	shorttitle = {Test {Driven} {Development}},
	abstract = {Quite simply, test-driven development is meant to eliminate fear in application development. While some fear is healthy (often viewed as a conscience that tells programmers to "be careful!"), the author believes that byproducts of fear include tentative, grumpy, and uncommunicative programmers who are unable to absorb constructive criticism. When programming teams buy into TDD, they immediately see positive results. They eliminate the fear involved in their jobs, and are better equipped to tackle the difficult challenges that face them. TDD eliminates tentative traits, it teaches programmers to communicate, and it encourages team members to seek out criticism However, even the author admits that grumpiness must be worked out individually! In short, the premise behind TDD is that code should be continually tested and refactored. Kent Beck teaches programmers by example, so they can painlessly and dramatically increase the quality of their work.},
	language = {en},
	publisher = {Addison-Wesley Professional},
	author = {{Beck, Kent}},
	month = mar,
	year = {2022},
	note = {Google-Books-ID: zNnPEAAAQBAJ},
	keywords = {Computers / Software Development \& Engineering / General, Computers / Software Development \& Engineering / Quality Assurance \& Testing},
}